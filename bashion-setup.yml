- hosts: localhost
  connection: local
  gather_facts: no
  tasks:

    - name: Importing the variables file
      include_vars: vars/outputs

    - name: Importing the bashion variable
      include_vars: vars/bashion

    - name: Create a new EC2 key pair
      ec2_key:
        name: bashion_key
        region: "{{ region }}"
      register: keyout

    - name: Store the key in the file
      copy:
        content: "{{ keyout.key.private_key }}"
        dest: "./bashion-key.pem"
        mode: '0600'
      when: keyout.changed

    - name: Create security group rule for bashion
      ec2_group:
        name: bashion-sg
        description: sg with the description
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ MYIP }}"
            rule_desc: allow 22 from myip
      register: bashionSG_out

    - name: Debug security group output
      debug:
        var: bashionSG_out


    - name: Creating Bashion Host  # Adding "name" field
      ec2_instance:
        key_name: bashion_key  # Make sure this matches the created key name
        region: "{{ region }}"
        instance_type: t2.micro
        vpc_subnet_id: "{{ pubsub1_id }}"
        image: "{{ bashion_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:  # Corrected from instance_tag to instance_tags
          Name: "Bashion-proj"
          Owner: Devops
        exact_count: 1
        count_tags:
          Name: "Bashion-proj"
          Owner: Devops
        group_id: "{{ bashionSG_out.group.id if bashionSG_out is defined and 'group' in bashionSG_out else 'default' }}"
      register: bashionHost_out


- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Importing the variables file
      include_vars: vars/outputs

    - name: Importing the bashion variable
      include_vars: proj_stack

    - name: Create a new EC2 key pair
      ec2_key:
        name: stack_key
        region: "{{ region }}"
      register: keyout

    - name: Store the key in the file
      copy:
        content: "{{ keyout.key.private_key }}"
        dest: "./stack_key.pem"
        mode: '0600'
      when: keyout.changed

    - name: Create security group rule for elb
      ec2_group:
        name: proj-elb
        description: "elb with the description"
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"
            rule_desc: "allow 80 to anywhere"

          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ bashionSG }}"
            rule_desc: "allow 22 to bashion"
      register: elbSG_out  # Correctly placed outside the module parameters

    - name: Create security group rule for proj_stack
      ec2_group:
        name: proj_stack-sg
        description: "proj_stack with the description"
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "0.0.0.0/0"  # Correctly using string
            rule_desc: "allow 80 to anywhere"

          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ bashionSG }}"  # Ensure this variable is defined
            rule_desc: "allow 22 to bashion"
      register: projSG_out

    - name: Updating the proj_stack to connect with themselves
      ec2_group:
        name: proj_stack-sg
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: all
            from_port: 0  # Use appropriate port for 'all' protocol
            to_port: 65535  # Use appropriate port for 'all' protocol
            cidr_ip: "0.0.0.0/0"  # Use a valid CIDR range for internal communication
            rule_desc: "allow within each other"
      register: update_proj_stack_out


           
          
        
    
        
